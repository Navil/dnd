name: Android Release Production

on: [workflow_call, workflow_dispatch]

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Create the Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: echo $KEYSTORE_BASE64 | base64 -di > $RUNNER_TEMP/my_production.keystore

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"

      - name: Add ENV
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV }}
        run: echo $ENV_FILE_CONTENT > ${GITHUB_WORKSPACE}/.env

      - name: Install dependencies
        run: flutter pub get
      - name: Build appbundle
        run: flutter build appbundle --release --obfuscate --split-debug-info=${GITHUB_WORKSPACE}/debug-symbols
      - name: Upload debug symbols
        run: flutter packages pub run sentry_dart_plugin
      - name: Sign Android App Bundle
        run: jarsigner -keystore $RUNNER_TEMP/my_production.keystore -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEYSTORE_KEY_PASSWORD }} -sigalg SHA256withRSA -digestalg SHA-256 -signedjar build/app/outputs/bundle/release/app-release-signed.aab build/app/outputs/bundle/release/*.aab upload
      - name: Upload Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: at.valley.dnd
          releaseFiles: /home/runner/work/dnd/dnd/build/app/outputs/bundle/release/app-release-signed.aab
          track: internal
          status: draft
          mappingFile: /home/runner/work/dnd/dnd/build/app/outputs/mapping/release/mapping.txt
